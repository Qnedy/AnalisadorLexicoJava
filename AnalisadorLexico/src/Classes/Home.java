/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Classes;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author mdeme
 */
public final class Home extends javax.swing.JFrame {
    static ArrayList<PalavraReservada> palavraR;
    static ArrayList<String> numeros_naturais;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        palavraR = new ArrayList<>();
        numeros_naturais = new ArrayList<>();
        diretoNoCodigo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnAnalisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAnalise = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        taCodigo = new javax.swing.JTextArea();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Código: (atenção, separe tudo por espaços em branco)");

        btnAnalisar.setText("Analisar");
        btnAnalisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalisarActionPerformed(evt);
            }
        });

        tbAnalise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Identificação", "Posição"
            }
        ));
        jScrollPane1.setViewportView(tbAnalise);

        taCodigo.setColumns(20);
        taCodigo.setRows(5);
        jScrollPane2.setViewportView(taCodigo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(btnAnalisar))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 5, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnalisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalisarActionPerformed
        analiseLexica();
        
    }//GEN-LAST:event_btnAnalisarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void diretoNoCodigo()
    {
        palavraR.add(new PalavraReservada("package", "Pacote"));
        palavraR.add(new PalavraReservada("new", "Novo"));
        palavraR.add(new PalavraReservada("class", "Classe"));
        palavraR.add(new PalavraReservada("extends", "Herança"));
        palavraR.add(new PalavraReservada("public", "Publico"));
        palavraR.add(new PalavraReservada("protected", "Protegido"));
        palavraR.add(new PalavraReservada("this", "Este"));
        palavraR.add(new PalavraReservada("do", "Fazer"));
        palavraR.add(new PalavraReservada("while", "Enquanto"));
        palavraR.add(new PalavraReservada("switch", "Mudança"));
        palavraR.add(new PalavraReservada("case", "Caso"));
        palavraR.add(new PalavraReservada("return", "Retorno"));
        palavraR.add(new PalavraReservada("void", "Vazio"));
        palavraR.add(new PalavraReservada("int", "Tipo de Dado Inteiro"));
        palavraR.add(new PalavraReservada("long", "Tipo de Dado Longo"));
        palavraR.add(new PalavraReservada("double", "Tipo de Dado Real"));
        palavraR.add(new PalavraReservada("float", "Tipo de Dado Flutuante"));
        palavraR.add(new PalavraReservada("String", "Tipo de Dado de Texto"));
        palavraR.add(new PalavraReservada("true", "Constante"));
        palavraR.add(new PalavraReservada("false", "Constante"));
        palavraR.add(new PalavraReservada("if", "Se"));
        palavraR.add(new PalavraReservada("else", "Se não"));
        palavraR.add(new PalavraReservada("for", "Para"));
        palavraR.add(new PalavraReservada("break", "Quebra"));
        palavraR.add(new PalavraReservada("default", "Padrão"));
        palavraR.add(new PalavraReservada("boolean", "Tipo de Dado Booleano"));
        palavraR.add(new PalavraReservada("(", "Abre Parênteses"));
        palavraR.add(new PalavraReservada(")", "Fecha Parênteses"));
        palavraR.add(new PalavraReservada("{", "Abre Chaves"));
        palavraR.add(new PalavraReservada("}", "Fecha Chaves"));
        palavraR.add(new PalavraReservada(">", "Maior que"));
        palavraR.add(new PalavraReservada("<", "Menor que"));
        palavraR.add(new PalavraReservada(";", "Finalizador"));
        palavraR.add(new PalavraReservada(".", "Ponto"));
        palavraR.add(new PalavraReservada("=", "Operador"));
        palavraR.add(new PalavraReservada("-", "Operador"));
        palavraR.add(new PalavraReservada("+", "Operador"));
        palavraR.add(new PalavraReservada("/", "Operador"));
        palavraR.add(new PalavraReservada("*", "Operador"));
        palavraR.add(new PalavraReservada("‘", "Abre Aspas S"));
        palavraR.add(new PalavraReservada("’", "Fecha Aspas S"));
        palavraR.add(new PalavraReservada("\"", "Aspa Dupla"));
        
        numeros_naturais.add("0");
        numeros_naturais.add("1");
        numeros_naturais.add("2");
        numeros_naturais.add("3");
        numeros_naturais.add("4");
        numeros_naturais.add("5");
        numeros_naturais.add("6");
        numeros_naturais.add("7");
        numeros_naturais.add("8");
        numeros_naturais.add("9");
        
        //palavraR.add(new AlbumArtista(listaAlbuns.get(0), listaArtistas.get(0)));
    }
    
    private void preencheTabela(ArrayList<PalavraReservada_Posicao> listaPalavrasQueVaoPraTabela) {
        DefaultTableModel modelo = (DefaultTableModel) tbAnalise.getModel();
        
        for(PalavraReservada_Posicao palavra: listaPalavrasQueVaoPraTabela){
            String[] linha = {palavra.getPalavraReservada().getToken(), palavra.getPalavraReservada().getIdentificacao(), "(" + palavra.getColuna()+","+palavra.getLinha()+")"};
            modelo.addRow(linha); 
        }
    }
    
    public PalavraReservada ehReservada(String palavraCache){
        PalavraReservada pReservada = new PalavraReservada();
       
        
        for(PalavraReservada palavra: palavraR){           
            if (palavraCache.equals(palavra.getToken())){
                return palavra;
            }
        }   
        return pReservada;
    }
    
    public void analiseLexica()
    {
        ArrayList<PalavraReservada_Posicao> listaPalavrasQueVaoPraTabela= new ArrayList<PalavraReservada_Posicao>();
        if (taCodigo.getText().equals(""))
            JOptionPane.showMessageDialog(null, "O campo código deve estar preenchido!");
        else
        {
            String linhas = taCodigo.getText();
            String[] linhasSplit = linhas.split("\n");
            
            for(int i=0; i<linhasSplit.length; i++){
                if(linhasSplit[i].length() == 0){
                    i = i + 1;
                }
                String palavraCache = "";
                linhasSplit[i] = linhasSplit[i] + " ";
                
                for(int j = 0; j<linhasSplit[i].length(); j++){
                    PalavraReservada nova = new PalavraReservada();
                    nova = ehReservada(palavraCache);
                    
                    try{
                        if(!(nova.toString().equalsIgnoreCase("PalavraReservada{token=null, identificacao=null}")) && linhasSplit[i].charAt(j) == ' '){;
                            listaPalavrasQueVaoPraTabela.add(new PalavraReservada_Posicao(nova, i, j));
                            palavraCache = "";
                        }
                        else{
                            if(linhasSplit[i].charAt(j) == ' '){
                                double valor = 0;
                                if(ehNumero(palavraCache)){
                                    PalavraReservada identificador = new PalavraReservada(palavraCache, "Constante");
                                    listaPalavrasQueVaoPraTabela.add(new PalavraReservada_Posicao(identificador, i, j));
                                }
                                else{
                                    PalavraReservada identificador = new PalavraReservada(palavraCache, "Identificador");
                                    listaPalavrasQueVaoPraTabela.add(new PalavraReservada_Posicao(identificador, i, j));
                                }
                                palavraCache = "";
                            }
                            else if(j == linhasSplit[i].length()-1){
                                PalavraReservada identificador = new PalavraReservada(palavraCache+linhasSplit[i].charAt(j), "Identificador");
                                listaPalavrasQueVaoPraTabela.add(new PalavraReservada_Posicao(identificador, i, j));
                                palavraCache = "";
                            }
                            else{
                                palavraCache = palavraCache + linhasSplit[i].charAt(j);
                            }
                        }
                    }
                    catch(Exception ex){
                        System.out.println("Erro: " + ex);
                    }
                    
                }
            }
            preencheTabela(listaPalavrasQueVaoPraTabela);
        }
    }
    
    public boolean ehNumero(String palavraReservada){
        boolean eh = true;
        for(char i : palavraReservada.toCharArray()){
            if(!(numeros_naturais.contains(i+""))){
                eh = false;
            }
        }
        return eh;
    }
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
        
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea taCodigo;
    private javax.swing.JTable tbAnalise;
    // End of variables declaration//GEN-END:variables
}

